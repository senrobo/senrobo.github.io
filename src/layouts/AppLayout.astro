---
import Link from "../components/Link.astro";
import navigation from "../data/navigation.json";
import { author, defaultMeta } from "../data/socials.ts";
import "@fontsource-variable/inter";

interface Props {
  title: string;
  description?: string;
  ogImage?: {
    src: string;
    alt: string;
  };
  pubDate?: Date;
}

const {
  title = defaultMeta.title,
  description = defaultMeta.description,
  ogImage = defaultMeta.ogImage,
  pubDate,
} = Astro.props;

const ogImageURL = new URL(ogImage.src, Astro.site).href;
const canonicalURL = new URL(Astro.url).href;

import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageURL} />
    <meta property="og:site_name" content={author} />
    <meta property="og:image:alt" content={ogImage.alt} />
    <meta property="og:locale" content="en_US" />
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageURL} />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="follow, index" />
    <meta name="author" content={author} />
    {
      pubDate && (
        <meta
          property="article:published_time"
          content={pubDate.toISOString()}
        />
      )
    }
    <ViewTransitions />
    <link href="/pagefind/pagefind-ui.css" rel="stylesheet" />
    <style>
      :root {
        --pagefind-ui-primary: #d8d8d8 !important;
        --pagefind-ui-secondary: #d8d8d8 !important;
        --pagefind-ui-background: #1d1f21 !important;
        --pagefind-ui-border: #2b2b2b !important;
        --pagefind-ui-tag: #d8d8d8 !important;
        --pagefind-ui-text: #d8d8d8 !important;
      }
    </style>
    <script src="/pagefind/pagefind-ui.js" is:inline></script>
  </head>
  <body
    class="bg-zinc-900 antialiased text-white selection:bg-teal-600 2xl:text-lg"
  >
    <nav
      class="fixed z-50 w-5/6 mx-auto overflow-x-auto rounded-full bottom-6 right-6 sm:overflow-x-visible max-w-min ring-1 ring-zinc-700/80 bg-zinc-800/60 sm:w-auto"
    >
      <ul class="flex items-center justify-start">
        {
          navigation.map((item) => (
            <li>
              <Link {...item} />
            </li>
          ))
        }
      </ul>
    </nav>
    <main id="main-content">
      <slot />
    </main>
    <style>
      nav {
        -ms-overflow-style: none; /* Internet Explorer 10+ */
        scrollbar-width: none; /* Firefox */
      }
      nav::-webkit-scrollbar {
        display: none; /* Safari and Chrome */
      }
    </style>
  </body>
</html>
